server {
    # Simplest configuration
    {# https://www.shellhacks.com/jinja2-check-if-variable-empty-exists-defined-true/ #}

    listen {% if item.value.listen_IP is defined and item.value.listen_IP|length %}{{ item.value.listen_IP }}:{% endif %}80{% if item.value.default_server is defined and item.value.default_server is sameas true %} default_server{% endif %};

    root /opt/bitnami/apps/{{ item.key }};
    server_name {{ item.key }};

    listen {% if item.value.listen_IP is defined and item.value.listen_IP|length %}{{ item.value.listen_IP }}:{% endif %}443 ssl{% if item.value.default_server is defined and item.value.default_server is sameas true %} default_server{% endif %};

    ssl_certificate      bitnami/certs/{% if item.value.use_lets_encrypt is defined and item.value.use_lets_encrypt is sameas true %}{{ item.key }}{% else %}server{% endif %}.crt;
    ssl_certificate_key  bitnami/certs/{% if item.value.use_lets_encrypt is defined and item.value.use_lets_encrypt is sameas true %}{{ item.key }}{% else %}server{% endif %}.key;

    # BEGIN Fix for WordPress plugins and themes
    # Certain WordPress plugins and themes do not properly link to PHP files because of symbolic links
    # https://github.com/bitnami/bitnami-docker-wordpress-nginx/issues/43
    rewrite ^/bitnami/wordpress(/.*) $1 last;
    # END Fix for WordPress plugins and themes

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
    error_page 502 /502.html;
    location = /502.html {
        ssi on;
        internal;
        auth_basic off;
        root /opt/bitnami/apps/502;
    }

    # BEGIN WordPress
    # https://wordpress.org/support/article/nginx/#general-wordpress-rules
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }
    # END WordPress

    # START Prevent hacks except for JetPack's IPs
    location ~* /.*xmlrpc\.php {
        allow 122.248.245.244/32;
        allow 54.217.201.243/32;
        allow 54.232.116.4/32;
        allow 192.0.80.0/20;
        allow 192.0.96.0/20;
        allow 192.0.112.0/20;
        allow 195.234.108.0/22;
        deny all;
        ##return 444;
    }

    location ~* /wpad\.dat {
        #deny all;
        return 444;
    }
    # END Prevent hacks
    
    location ^~ /.well-known {
        allow all;    
        root /opt/bitnami/apps/acme_validation;
    }

    # WP hardening from JM first ec2 instance Deny access to any files with a 
    # .php extension in the uploads directory
    location ~* /(?:uploads|files)/.*\.php$ {
      deny all;
    }

    #Documented here:
    # https://codex.wordpress.org/Hardening_WordPress#WP-Includes This group
    # is suspect, use with caution
    location ~* wp-admin/includes { deny all; } location ~*
    wp-includes/theme-compat/ { deny all; } location ~*
    wp-includes/js/tinymce/langs/.*.php { deny all; }

    # Deny access to uploads that arenâ€™t images, videos, music, etc.
    location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
        deny all;
    }

    # Deny public access to wp-config.php
    location ~* wp-config.php {
        deny all;
    }

    {% if item.value.client_max_body_size is defined and item.value.client_max_body_size|length %}client_max_body_size {{ item.value.client_max_body_size }};{% endif %}

    include "/opt/bitnami/apps/{{ item.key }}/custom_nginx_conf/custom.conf";

    include "/opt/bitnami/nginx/conf/bitnami/*.conf";

}

# vim: ai et ts=4 sw=4 sts=4 nu
